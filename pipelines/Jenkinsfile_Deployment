pipeline {
    agent any
    
    parameters {
        string(name: 'strVersao', defaultValue: 'stable', description: 'Version')
        string(name: 'strClusterName', defaultValue: 'cluster-project-capstone', description: 'Cluster name')
        choice(name: 'strNamespace', choices: ['production', 'staging', 'development'], description: 'What namespace?')            
    }    
    
    environment{
        def dockerHome = "/usr" //tool name: 'dockerTool', type: 'org.jenkinsci.plugins.docker.commons.tools.DockerTool'
        def dockerExec = "${dockerHome}/bin/docker"  
        def awsExec = "/usr/local/bin/aws"
        def hadolintExec = "/bin/hadolint"
        def kraneExec = "/var/lib/gems/2.5.0/gems/krane-1.1.3/exe/krane"
        def workspace = pwd()
        def descriptorsk8s = "${workspace}/descriptors-k8s"
    }
    
    stages {
        stage('Checkout'){
            steps{
                 checkout scm
            }
        }
        
        stage('Lint'){
            steps{
                sh "${hadolintExec} --ignore DL3013 Dockerfile"
            }
        }
        
        stage('Build Image'){
            steps{
                sh "${dockerExec} build --tag=thedevices/app-python-demo:${params.strVersao} ."
            }
        }
        
        stage('Push Image'){
            steps{
                withCredentials([string(credentialsId: 'dockerhub-credential', variable: 'dockerHubPassword')]) {
                    sh "${dockerExec} login -u thedevices -p ${dockerHubPassword}"
                    sh "${dockerExec} push thedevices/app-python-demo:${params.strVersao}"
                }
            }
        }
        stage('Deploy'){
            steps{
                sh "export CURRENT_CONTEXT=$(kubectl config current-context)"
                sh "${kraneExec} deploy ${strNamespace} $CURRENT_CONTEXT -f ./descriptors-k8s"
                sh "kubectl get services -o wide --namespace ${strNamespace}
                
                //sh "chmod +x ./run_deploy.sh $1"
                //sh "./run_deploy.sh"
            }
        }
    }    
    
}
